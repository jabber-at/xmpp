Source: erlang-p1-xmpp
Priority: optional
Maintainer: Mathias Ertl <mati@jabber.at>
Build-Depends: debhelper (>= 9), dh-rebar, erlang-base (>= 1:17.5), erlang-eunit, 
 erlang-p1-xml (>=1.1.28), erlang-p1-stringprep (>= 1.0.10), erlang-p1-utils (>= 1.0.10),
 erlang-syntax-tools, libexpat1-dev
Standards-Version: 4.1.3
Section: libs
Homepage: https://github.com/processone/xmpp
VCS-Browser: https://github.com/jabber-at/xmpp
VCS-Git: https://github.com/jabber-at/xmpp.git

Package: erlang-p1-xmpp
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}, erlang-base (>= 1:17.5) | ${erlang-abi:Depends},
         ${erlang:Depends}, erlang-p1-xml (>=1.1.28), erlang-p1-stringprep (>= 1.0.10)
Description: Erlang/Elixir XMPP parsing and serialization library
 This library provides comprehensive representation of XMPP elements as
 well as tools to work with them. Every such element is represented by an
 Erlang record. Most of the library's code is auto generated and thus
 considered to be bug free and efficient.
 .
 The approach is very similar to ASN.1, Google Protocol Buffers or Apache
 Thrift: an XML element is transformed into internal language structure
 (an Erlang record in this case) - the process known as "decoding". During
 decoding, validation is also performed, thus well-typed structures are
 generated, potentially decreasing bugs related to handcrafted parsing. A
 reverse process known as "encoding" is applied for transforming an
 Erlang record into an XML element.
 .
 This package should be used along with erlang-p1-xml, because it is
 only able to decode from and encode to structures generated by that
 library (that is, xmlel() elements).
 .
 This library was written for ejabberd which still uses it.
 It was split off into it's own project to follow
 Erlang/OTP guidelines.
